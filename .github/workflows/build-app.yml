name: Build app

on: [ push, pull_request, workflow_dispatch ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest, macos-latest ]

    name: Create ${{ matrix.os }} executable

    steps:
      - name: Fetch Repository Name
        id: repo-name
        run: echo "::set-output name=value::$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')"

      # Checks-out your repository under $GITHUB_WORKSPACE
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        shell: bash

      - name: Build Library
        if: matrix.os == 'ubuntu-latest'
        run: "python setup.py sdist bdist_wheel"

      - name: Publish Library
        uses: pypa/gh-action-pypi-publish@release/v1
        if: matrix.os == 'ubuntu-latest'
        with:
          user: ${{ secrets.PYPI_USERNAME }}
          password: ${{ secrets.PYPI_PASSWORD }}
          verify_metadata: false
        continue-on-error: true

      - name: Install Chocolatey
        uses: crazy-max/ghaction-chocolatey@v1.4.0
        if: matrix.os == 'windows-latest'
        with:
          args: -h

      - name: Install ImageMagick
        if: matrix.os == 'windows-latest'
        run: "choco install imagemagick.tool"

      - name: Setup Just
        uses: extractions/setup-just@v1
        with:
          just-version: 0.8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Application
        run: "just build"

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.repo-name.outputs.value }}-${{ matrix.os }}
          path: ./dist/

      - name: Create Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          files: ./dist/*
